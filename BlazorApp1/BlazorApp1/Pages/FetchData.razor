@page "/fetchdata"
@using BlazorApp1.Components

<PageTitle>Weather forecast</PageTitle>

@using BlazorApp1.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>


<PopUpNotification 
    Date="@date" 
    TempC = "@temperatureC" 
    TempF = "@temperatureF" 
    Summary = "@summary"
    Visible="@hidden" />


<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr @onclick = "@(() => handleClick(forecast))">
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    public string date = "??";

    public string temperatureC = "??";

    public string temperatureF = "??";

    public string summary = "??";

    bool hidden = true;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    private void handleClick(WeatherForecast forecast)
    {
        date = forecast.Date.ToShortDateString();
        temperatureC = forecast.TemperatureC.ToString();
        temperatureF = forecast.TemperatureF.ToString();
        summary = forecast.Summary!;
        hidden = false;
    }
}
